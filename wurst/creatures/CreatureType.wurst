package CreatureType

// Standard imports
import HashMap
import LinkedList

// Custom imports
import CharacterClass
import CreatureRace
import CreatureStats

/** The properties of one specific type of creatures (unit-type) */
public class CreatureType
    /** Bound unit type */
    private constant int unitTypeId

    /** The race of the creature */
    private constant CreatureRace creatureRace

    /** The class of the creature (if any), or null */
    private CharacterClass characterClass = null

    // Stats of this creature type (if any), otherwise null
    private CreatureStats statsAdded = null
    private CreatureStats statsAddedPercent = null

    /** Quantity of experience given by this type of creatures */
    private int xpGain = 0

    // Various "default" stats of the creature type : Computed at startup
    private constant CreatureStats defaultStats = new CreatureStats()

    /** Mapping of all creature types */
    private static constant HashMap<int, CreatureType> MAP = new HashMap<int, CreatureType>()
    static constant LinkedList<CreatureType> LIST = new LinkedList<CreatureType>()

    private construct(int unitTypeId, CreatureRace creatureRace)
        this.unitTypeId = unitTypeId
        this.creatureRace = creatureRace
        this.computeDefaultStats()

        if MAP.has(this.unitTypeId)
            Log.error("Duplicated creature type found : " + this.unitTypeId.toString())
        MAP.put(this.unitTypeId, this)

    // Accessors
    /** Returns the creature type corresponding to a unit type id */
    static function get(int unitTypeId) returns CreatureType
        return MAP.get(unitTypeId)

    function getUnitTypeId() returns int
        return this.unitTypeId

    function getXpGain() returns int
        return this.xpGain

    function getRace() returns CreatureRace
        return this.creatureRace

    function getClass() returns CharacterClass
        return this.characterClass

    function getStatsAdded() returns CreatureStats
        return this.statsAdded

    function getStatsAddedPercent() returns CreatureStats
        return this.statsAddedPercent
    
    function getDefaultStats() returns CreatureStats
        return this.defaultStats

    // Modifiers
    function setClass(CharacterClass characterClass)
        this.characterClass = characterClass

    function setXpGain(int xpGain)
        this.xpGain = xpGain

    function setStatsAdded(CreatureStats statsAdded)
        this.statsAdded = statsAdded

    function setStatsAddedPercent(CreatureStats statsAddedPercent)
        this.statsAddedPercent = statsAddedPercent
    
    // Functions
    private function computeDefaultStats()
        unit u = createUnit(players[PLAYER_NEUTRAL_PASSIVE], this.unitTypeId, ZERO2, 0.0.asAngleRadians())

        this.defaultStats.setMoveSpeed(u.getMoveSpeed())
        this.defaultStats.setAttackSpeed(u.getAttackCooldown(0))
        this.defaultStats.setLife(u.getMaxHP())
        this.defaultStats.setMana(u.getMaxMana())

        u.remove()

    // ======= CREATURES DIRECTORY =======

    // === Special creatures ===
    static constant CreatureType CIBLE_ENTRAINEMENT   = new CreatureType('h00E', null)
    static constant CreatureType TOMBE                = new CreatureType('h00F', null)

    // === Heroes for players ===
    static constant CreatureType HERO_PALADIN                 = new CreatureType('H00C', CreatureRace.CENTAUR)
        ..setClass(CharacterClass.PALADIN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_CONTONDANT, 2)
        )
    static constant CreatureType HERO_CHASSEUR_CENTAURE       = new CreatureType('N00M', CreatureRace.CENTAUR)
        ..setClass(CharacterClass.CHASSEUR)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_PERCANT, 2)
        )
    static constant CreatureType HERO_CHASSEUR_ELFE          = new CreatureType('N00J', CreatureRace.ELF)
        ..setClass(CharacterClass.CHASSEUR)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_PERCANT, 2)
        )
    static constant CreatureType HERO_MAGICIEN_ABJURATEUR     = new CreatureType('H003', CreatureRace.HUMAN)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )
    static constant CreatureType HERO_MAGICIEN_ENTROPISTE     = new CreatureType('H004', CreatureRace.ORC)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )
    static constant CreatureType HERO_MAGICIEN_EVOCATEUR      = new CreatureType('H00D', CreatureRace.HUMAN)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )
    static constant CreatureType HERO_MAGICIEN_NECROMANCIEN   = new CreatureType('H000', CreatureRace.UNDEAD)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )
    static constant CreatureType HERO_MAGICIEN_INVOCATEUR     = new CreatureType('H00H', CreatureRace.ELF)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )
    static constant CreatureType HERO_MAGICIEN_TRANSMUTATEUR  = new CreatureType('H00G', CreatureRace.ORC)
        ..setClass(CharacterClass.MAGICIEN)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_AIR, 2)
        )

    // === Common neutral objects ===

    // === Neutral monsters ===
    // Spiders family
    static constant CreatureType OEUFS_ARAIGNEE       = new CreatureType('n00L', CreatureRace.ARACHNID)
        ..setXpGain(1)
    static constant CreatureType ARAIGNEE_PROGENITURE = new CreatureType('n00I', CreatureRace.ARACHNID)
        ..setXpGain(2)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 1)
        )
    static constant CreatureType PETITE_ARAIGNEE      = new CreatureType('n00D', CreatureRace.ARACHNID)
        ..setXpGain(4)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 2)
        )
    static constant CreatureType ARAIGNEE_NOIRE       = new CreatureType('n00C', CreatureRace.ARACHNID)
        ..setXpGain(20)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 4)
        )
    static constant CreatureType ARAIGNEE_VENIMEUSE   = new CreatureType('n00F', CreatureRace.ARACHNID)
        ..setXpGain(40)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 4)
            ..setDamage(DamageClass.DAMAGE_POISON, 4)
        )
    static constant CreatureType BROODMOTHER          = new CreatureType('n00G', CreatureRace.ARACHNID)
        ..setXpGain(250)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 4)
            ..setDamage(DamageClass.DAMAGE_POISON, 8)
        )

    // Frost wolves family
    static constant CreatureType LOUVETEAU_NEIGES      = new CreatureType('n00O', CreatureRace.FROST_MONSTER)
        ..setXpGain(4)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 1)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
    static constant CreatureType LOUVE_NEIGES      = new CreatureType('n00P', CreatureRace.FROST_MONSTER)
        ..setXpGain(10)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 3)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
    static constant CreatureType LOUP_ALPHA_NEIGES      = new CreatureType('n00Q', CreatureRace.FROST_MONSTER)
        ..setXpGain(18)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 5)
            ..setDamage(DamageClass.DAMAGE_FROID, 3)
        )

    // Frost furbolgs family
    static constant CreatureType FURBOLG_POLAIRE      = new CreatureType('n00S', CreatureRace.FROST_MONSTER)
        ..setXpGain(8)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 2)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
    static constant CreatureType CHAMAN_FURBOLG_POLAIRE      = new CreatureType('n00T', CreatureRace.FROST_MONSTER)
        ..setXpGain(8)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 1)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
    static constant CreatureType CHASSEUR_FURBOLG_POLAIRE      = new CreatureType('n00U', CreatureRace.FROST_MONSTER)
        ..setXpGain(18)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 5)
            ..setDamage(DamageClass.DAMAGE_FROID, 3)
        )
    static constant CreatureType CHAMPION_FURBOLG_POLAIRE      = new CreatureType('n00V', CreatureRace.FROST_MONSTER)
        ..setXpGain(28)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 5)
            ..setDamage(DamageClass.DAMAGE_FROID, 3)
    )

    // Solitary frost creatures
    static constant CreatureType BONHOMME_NEIGE       = new CreatureType('n00N', CreatureRace.FROST_MONSTER)
    static constant CreatureType REVENANT_GLACES      = new CreatureType('n00W', CreatureRace.FROST_MONSTER)
        ..setXpGain(300)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 2)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
    static constant CreatureType GRAND_MAMOUTH_BLANC      = new CreatureType('n00R', CreatureRace.FROST_MONSTER)
        ..setXpGain(400)
        ..setStatsAdded(new CreatureStats()
            ..setDamage(DamageClass.DAMAGE_TRANCHANT, 3)
            ..setDamage(DamageClass.DAMAGE_FROID, 2)
        )
