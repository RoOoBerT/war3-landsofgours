package SpellsImplementation

// Standard imports
import Abilities
import ClosureTimers
import EventHelper
//import Fx
import Units
import RegisterEvents

// Custom imports
import AoeEffect
import BuffTypesImplementation
import ConeEffect
import DilatableTime
import SpellCasting
import UnitsBuffs
import WizardSpell

init
    // ARME_ENFLAMMEE
    registerSpellEffectEvent(WizardSpell.ARME_ENFLAMMEE.abilityId) ->
        unit target = GetSpellTargetUnit()
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real duration = 20 + level * 2.5
        
        AllUnitsBuffs.addBuffTimed(target, BUFF_ARME_ENFLAMMEE, duration)

    // BAIES_NOURRICIERES
    registerSpellEffectEvent(WizardSpell.BAIES_NOURRICIERES.abilityId) ->
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        item berries = createItem('I00L', emitter.getPos())
            ..setCharges(level)
        emitter.addItemHandle(berries)

    // BOUCLIER_GLACE
    registerSpellEffectEvent(WizardSpell.BOUCLIER_GLACE.abilityId) ->
        unit emitter = GetTriggerUnit()
        unit target = GetSpellTargetUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real duration = 15.0 + level

        ConicWaveGraphics head = new ConicWaveGraphics(Abilities.zigguratFrostMissile, 0.4, 64)
        new ConeEffect(duration, target.getPos().withZ(0.0), emitter, target)
                ..setSpreadAngle(360.0.asAngleDegrees())
                ..setQueuePropagationSpeed(vec2(64, 1))
                ..setHeadPropagationSpeed(vec2(128, 1))
                ..setQueue(null)
                ..setHead(head)
                ..setUnitEnteringHandler(null)
                ..setUnitLeavingHandler(null)
                ..start()

    // CONE_FROID
    registerSpellEffectEvent(WizardSpell.CONE_FROID.abilityId) ->
        unit emitter = GetTriggerUnit()
        vec2 target = getSpellTargetPos()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real speed = 64
        real range = 384.0 + level * 32
        real duration = 10.0
        
        ConicWaveGraphics queue = new ConicWaveGraphics(Abilities.aIobSpecialArt, 0.2, 60)
        let cone = new ConeEffect(duration, emitter.getPos().withZ(100.0), emitter, emitter)
                ..setAngle(emitter.getPos().angleTo(target))
                ..setMaxRange(range)
                ..setSpreadAngle(45.0.asAngleDegrees())
                ..setQueuePropagationSpeed(vec2(48, 0))
                ..setHeadPropagationSpeed(vec2(48, speed))
                ..setQueue(queue)
                ..setHead(null)
                ..start()
        
        CHANELING_CONES.put(emitter, cone)

    // DILATATION_TEMPORELLE
    registerSpellEffectEvent(WizardSpell.DILATATION_TEMPORELLE.abilityId) ->
        unit emitter = GetTriggerUnit()
        vec2 target = getSpellTargetPos()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real duration = 30
        real radius = 400.0 + level * 25.0

        new TimeDilatation(target.toVec3(), radius, 0.1)
            ..start(duration)

    // FEU_SOLAIRE
    registerSpellEffectEvent(WizardSpell.FEU_SOLAIRE.abilityId) ->
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real speed = 512
        real range = 256.0 + level * 32
        real duration = range / speed
        
        ConicWaveGraphics head = new ConicWaveGraphics(Abilities.aIfbSpecialArt, 0.1, 64)
        new ConeEffect(duration, emitter.getPos().withZ(100.0), emitter, emitter)
                ..setMaxRange(range)
                ..setSpreadAngle(360.0.asAngleDegrees())
                ..setQueuePropagationSpeed(vec2(32, speed))
                ..setHeadPropagationSpeed(vec2(32, speed))
                ..setQueue(null)
                ..setHead(head)
                ..start()

    // FLETRISSURE_ABOMINABLE_ABI_DALZIM
    registerSpellEffectEvent(WizardSpell.FLETRISSURE_ABOMINABLE_ABI_DALZIM.abilityId) ->
        unit emitter = GetTriggerUnit()
        vec2 target = getSpellTargetPos()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real duration = 5.0
        real range = 400.0 + level * 25.0

        ConeUnitHandler enterConeHandler = (cone, who) ->
            Log.debug("Unit entered Abi Dalzim : " + who.getName())

        ConeUnitHandler leaveConeHandler = (cone, who) ->
            Log.debug("Unit left Abi Dalzim : " + who.getName())

        // Skull effect
        // buildings\\other\\SacrificialAltar\\SacrificialAltar.mdl
        /*Fx fx = new Fx(target, 270.0.asAngleDegrees(), "buildings\\other\\SacrificialAltar\\SacrificialAltar.mdl")
            ..setZ(-200)*/
        /*fx.getDummy()
            ..setFlyHeight(0, 50)*/

        unit dummyFx = createUnit(players[PLAYER_NEUTRAL_PASSIVE], 'h006', target, 227.0.asAngleDegrees())
            ..addAbility(HEIGHT_ENABLER)
            ..removeAbility(HEIGHT_ENABLER)
            ..setFlyHeight(300, 50)
            ..setTimedLife(duration)
        doAfter(duration) ->
            dummyFx.remove()

        /*effect fx = addEffect("buildings\\other\\SacrificialAltar\\SacrificialAltar.mdl", target)
            ..setColor(255, 64, 64)
        doAfter(duration) ->
            fx.destr()*/

        ConicWaveGraphics queue = new ConicWaveGraphics(Abilities.devourEffectArt, 0.3, 64)
        new ConeEffect(duration, target.withZ(0.0), emitter, null)
                ..setSpreadAngle(360.0.asAngleDegrees())
                ..setMaxRange(range)
                ..setHeadPropagationSpeed(vec2(0, 250))
                ..setQueue(queue)
                ..setUnitEnteringHandler(enterConeHandler)
                ..setUnitLeavingHandler(leaveConeHandler)
                ..start()

    // HATE
    registerSpellEffectEvent(WizardSpell.HATE.abilityId) ->
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real speed = 512
        real range = 384.0 + level * 32
        real graphicsDuration = range / speed
        real duration = 12.0 + level * 2
        
        // Buff : hate
        AllUnitsBuffs.addBuffTimed(emitter, BUFF_HATE, duration)
        ConeUnitHandler hateHandler = (ConeEffect cone, unit who) ->
            AllUnitsBuffs.addBuffTimed(who, BUFF_HATE, duration)
            skip

        // Visual effect
        ConicWaveGraphics head = new ConicWaveGraphics(Abilities.devourEffectArt, 0.1, 64)
        new ConeEffect(graphicsDuration, emitter.getPos().withZ(100.0), emitter, emitter)
                ..setMaxRange(range)
                ..setSpreadAngle(360.0.asAngleDegrees())
                ..setQueuePropagationSpeed(vec2(0, 0))
                ..setHeadPropagationSpeed(vec2(32, speed))
                ..setQueue(null)
                ..setHead(head)
                ..setUnitEnteringHandler(hateHandler)
                ..start()

    // INCINERATEUR_AGANAZZAR
    registerSpellEffectEvent(WizardSpell.INCINERATEUR_AGANAZZAR.abilityId) ->
        unit emitter = GetTriggerUnit()
        vec2 target = getSpellTargetPos()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real speed = 256
        real range = 384.0 + level * 32
        real duration = 6.0 + level * 0.25
        
        ConicWaveGraphics queue = new ConicWaveGraphics(Abilities.aIfbSpecialArt, 0.1, 32)
        new ConeEffect(duration, emitter.getPos().withZ(100.0), emitter, emitter)
                ..setAngle(emitter.getPos().angleTo(target))
                ..setMaxRange(range)
                ..setSpreadAngle(0.0.asAngleDegrees())
                ..setQueuePropagationSpeed(vec2(64, 0))
                ..setHeadPropagationSpeed(vec2(64, speed))
                ..setQueue(queue)
                ..setHead(null)
                ..start()

    // NUAGE_INCENDIAIRE
    registerSpellEffectEvent(WizardSpell.NUAGE_INCENDIAIRE.abilityId) ->
        vec2 target = getSpellTargetPos()
        real endTime = TimeDilatation.getModifiedTime(target.withZ(0)) + 30.0
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real frequency = 1 / (2.0 + level * 0.1)
        
        AoeImpactHandler handler = (AoeEffect aoe, vec2 where) ->
            addEffect(Abilities.flameStrike11, where)
        
        new AoeEffect(endTime, emitter, target.withZ(0.), 600.0 - 64.0, frequency, handler)
            ..start()

    // NUAGE_MORTEL
    registerSpellEffectEvent(WizardSpell.NUAGE_MORTEL.abilityId) ->
        vec2 target = getSpellTargetPos()
        real endTime = TimeDilatation.getModifiedTime(target.withZ(0)) + 30.0
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real frequency = 1 / (2.0 + level * 0.1)
        
        AoeImpactHandler handler = (AoeEffect aoe, vec2 where) ->
            addEffect(Abilities.plagueCloudCaster, where)
                
        new AoeEffect(endTime, emitter, target.withZ(0.), 600.0 - 64.0, frequency, handler)
            ..start()

    // NUAGE_PUANT
    registerSpellEffectEvent(WizardSpell.NUAGE_PUANT.abilityId) ->
        vec2 target = getSpellTargetPos()
        real endTime = TimeDilatation.getModifiedTime(target.withZ(0)) + 30.0
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real frequency = 1 / (2.0 + level * 0.1)
        
        AoeImpactHandler handler = (AoeEffect aoe, vec2 where) ->
            addEffect(Abilities.cloudOfFog, where)
        
        new AoeEffect(endTime, emitter, target.withZ(0.), 600.0 - 250.0, frequency, handler)
            ..start()

    // NUEE_METEORES
    registerSpellEffectEvent(WizardSpell.NUEE_METEORES.abilityId) ->
        vec2 target = getSpellTargetPos()
        real endTime = TimeDilatation.getModifiedTime(target.withZ(0)) + 30.0
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real frequency = 2.25 - level * 0.1
        
        AoeImpactHandler handler = (AoeEffect aoe, vec2 where) ->
            flashEffect(Units.infernalBirth, where)

            // Meteor burning ground
            ConeEffect burningGroundEffect = new ConeEffect(5.0, where.withZ(0), emitter, null)
                ..setSpreadAngle(360.0.asAngleDegrees())
                ..setMaxRange(150.0)
                ..setHeadPropagationSpeed(vec2(75, 75.0))
                ..setQueue(new ConicWaveGraphics(Abilities.flameStrikeEmbers, 0.65, 32.0))
            doAfter(1.0) ->
                burningGroundEffect.start()
                
        new AoeEffect(endTime, emitter, target.withZ(0.), 600.0 - 250.0, frequency, handler)
            ..start()

    // PEAU_PIERRE
    registerSpellEffectEvent(WizardSpell.PEAU_PIERRE.abilityId) ->
        unit target = GetSpellTargetUnit()
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real duration = 30 + level * 2.5
        
        AllUnitsBuffs.addBuffTimed(target, BUFF_PEAU_PIERRE, duration)

    // PROJECTILE_MAGIQUE
    // RENVOI_SORTS
    // TOILES_ARAIGNEE
    // TRANSMUTATION_CHAIR_PIERRE

    // Rain of arrows
    registerSpellEffectEvent('A00V') ->
        /*Log.debug("Spell was cast : " + GetSpellAbility().getHandleId().toString())
        
        unit caster = GetTriggerUnit()
        int abilityLevel = 1
        vec2 fromPoint = GetTriggerUnit().getPos()
        vec2 targetPoint = getSpellTargetPos()
        for int i = 1 to abilityLevel
            // FIXME generateArrowFromUnit(caster, targetPoint, )*/
        

    // Toiles d'araignee
    registerSpellEffectEvent(WizardSpell.TOILES_ARAIGNEE.abilityId) ->
        vec2 target = getSpellTargetPos()
        real endTime = TimeDilatation.getModifiedTime(target.withZ(0)) + 25.0
        unit emitter = GetTriggerUnit()
        int level = GetUnitAbilityLevel(emitter, GetSpellAbilityId())
        real frequency = 1 / (1 + 0.25 * level)
        real radius = 400.0 + 20.0 * level

        // FIXME PATH CHANGED ?!
        AoeImpactHandler handler = new GenericImpactHandler("war3mapImported\\web1.mdx", 2, color(0, 0, 0), 1, 250, 40)
        new AoeEffect(endTime, emitter, target.withZ(0.), radius, frequency, handler)
            ..start()
